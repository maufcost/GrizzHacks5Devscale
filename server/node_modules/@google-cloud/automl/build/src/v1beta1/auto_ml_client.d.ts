/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, Descriptors, ClientOptions, LROperation, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  AutoML Server API.
 *
 *  The resource names are assigned by the server.
 *  The server never reuses names that it has created after the resources with
 *  those names are deleted.
 *
 *  An ID of a resource is the last element of the item's resource name. For
 *  `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`, then
 *  the id for the item is `{dataset_id}`.
 *
 *  Currently the only supported `location_id` is "us-central1".
 *
 *  On any input that is documented to expect a string parameter in
 *  snake_case or kebab-case, either of those cases is accepted.
 * @class
 * @memberof v1beta1
 */
export declare class AutoMlClient {
    private _terminated;
    private _opts;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    autoMlStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of AutoMlClient.
     *
     * @param {object} [options] - The configuration object. See the subsequent
     *   parameters for more details.
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     */
    constructor(opts?: ClientOptions);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    createDataset(request: protos.google.cloud.automl.v1beta1.ICreateDatasetRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.ICreateDatasetRequest | undefined, {} | undefined]>;
    createDataset(request: protos.google.cloud.automl.v1beta1.ICreateDatasetRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.ICreateDatasetRequest | null | undefined, {} | null | undefined>): void;
    createDataset(request: protos.google.cloud.automl.v1beta1.ICreateDatasetRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.ICreateDatasetRequest | null | undefined, {} | null | undefined>): void;
    getDataset(request: protos.google.cloud.automl.v1beta1.IGetDatasetRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IGetDatasetRequest | undefined, {} | undefined]>;
    getDataset(request: protos.google.cloud.automl.v1beta1.IGetDatasetRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IGetDatasetRequest | null | undefined, {} | null | undefined>): void;
    getDataset(request: protos.google.cloud.automl.v1beta1.IGetDatasetRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IGetDatasetRequest | null | undefined, {} | null | undefined>): void;
    updateDataset(request: protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest | undefined, {} | undefined]>;
    updateDataset(request: protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest | null | undefined, {} | null | undefined>): void;
    updateDataset(request: protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IDataset, protos.google.cloud.automl.v1beta1.IUpdateDatasetRequest | null | undefined, {} | null | undefined>): void;
    getAnnotationSpec(request: protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IAnnotationSpec, protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest | undefined, {} | undefined]>;
    getAnnotationSpec(request: protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IAnnotationSpec, protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest | null | undefined, {} | null | undefined>): void;
    getAnnotationSpec(request: protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IAnnotationSpec, protos.google.cloud.automl.v1beta1.IGetAnnotationSpecRequest | null | undefined, {} | null | undefined>): void;
    getTableSpec(request: protos.google.cloud.automl.v1beta1.IGetTableSpecRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IGetTableSpecRequest | undefined, {} | undefined]>;
    getTableSpec(request: protos.google.cloud.automl.v1beta1.IGetTableSpecRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IGetTableSpecRequest | null | undefined, {} | null | undefined>): void;
    getTableSpec(request: protos.google.cloud.automl.v1beta1.IGetTableSpecRequest, callback: Callback<protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IGetTableSpecRequest | null | undefined, {} | null | undefined>): void;
    updateTableSpec(request: protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest | undefined, {} | undefined]>;
    updateTableSpec(request: protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest | null | undefined, {} | null | undefined>): void;
    updateTableSpec(request: protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest, callback: Callback<protos.google.cloud.automl.v1beta1.ITableSpec, protos.google.cloud.automl.v1beta1.IUpdateTableSpecRequest | null | undefined, {} | null | undefined>): void;
    getColumnSpec(request: protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest | undefined, {} | undefined]>;
    getColumnSpec(request: protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest | null | undefined, {} | null | undefined>): void;
    getColumnSpec(request: protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IGetColumnSpecRequest | null | undefined, {} | null | undefined>): void;
    updateColumnSpec(request: protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest | undefined, {} | undefined]>;
    updateColumnSpec(request: protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest | null | undefined, {} | null | undefined>): void;
    updateColumnSpec(request: protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IColumnSpec, protos.google.cloud.automl.v1beta1.IUpdateColumnSpecRequest | null | undefined, {} | null | undefined>): void;
    getModel(request: protos.google.cloud.automl.v1beta1.IGetModelRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IGetModelRequest | undefined, {} | undefined]>;
    getModel(request: protos.google.cloud.automl.v1beta1.IGetModelRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IGetModelRequest | null | undefined, {} | null | undefined>): void;
    getModel(request: protos.google.cloud.automl.v1beta1.IGetModelRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IGetModelRequest | null | undefined, {} | null | undefined>): void;
    getModelEvaluation(request: protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IModelEvaluation, protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest | undefined, {} | undefined]>;
    getModelEvaluation(request: protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest, options: gax.CallOptions, callback: Callback<protos.google.cloud.automl.v1beta1.IModelEvaluation, protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest | null | undefined, {} | null | undefined>): void;
    getModelEvaluation(request: protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest, callback: Callback<protos.google.cloud.automl.v1beta1.IModelEvaluation, protos.google.cloud.automl.v1beta1.IGetModelEvaluationRequest | null | undefined, {} | null | undefined>): void;
    deleteDataset(request: protos.google.cloud.automl.v1beta1.IDeleteDatasetRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    deleteDataset(request: protos.google.cloud.automl.v1beta1.IDeleteDatasetRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteDataset(request: protos.google.cloud.automl.v1beta1.IDeleteDatasetRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the deleteDataset() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkDeleteDatasetProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkDeleteDatasetProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    importData(request: protos.google.cloud.automl.v1beta1.IImportDataRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    importData(request: protos.google.cloud.automl.v1beta1.IImportDataRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    importData(request: protos.google.cloud.automl.v1beta1.IImportDataRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the importData() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkImportDataProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkImportDataProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    exportData(request: protos.google.cloud.automl.v1beta1.IExportDataRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    exportData(request: protos.google.cloud.automl.v1beta1.IExportDataRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    exportData(request: protos.google.cloud.automl.v1beta1.IExportDataRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the exportData() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkExportDataProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkExportDataProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    createModel(request: protos.google.cloud.automl.v1beta1.ICreateModelRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    createModel(request: protos.google.cloud.automl.v1beta1.ICreateModelRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createModel(request: protos.google.cloud.automl.v1beta1.ICreateModelRequest, callback: Callback<LROperation<protos.google.cloud.automl.v1beta1.IModel, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the createModel() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkCreateModelProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkCreateModelProgress(name: string): Promise<LROperation<protos.google.cloud.automl.v1beta1.Model, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    deleteModel(request: protos.google.cloud.automl.v1beta1.IDeleteModelRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    deleteModel(request: protos.google.cloud.automl.v1beta1.IDeleteModelRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteModel(request: protos.google.cloud.automl.v1beta1.IDeleteModelRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the deleteModel() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkDeleteModelProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkDeleteModelProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    deployModel(request: protos.google.cloud.automl.v1beta1.IDeployModelRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    deployModel(request: protos.google.cloud.automl.v1beta1.IDeployModelRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deployModel(request: protos.google.cloud.automl.v1beta1.IDeployModelRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the deployModel() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkDeployModelProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkDeployModelProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    undeployModel(request: protos.google.cloud.automl.v1beta1.IUndeployModelRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    undeployModel(request: protos.google.cloud.automl.v1beta1.IUndeployModelRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    undeployModel(request: protos.google.cloud.automl.v1beta1.IUndeployModelRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the undeployModel() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkUndeployModelProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkUndeployModelProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    exportModel(request: protos.google.cloud.automl.v1beta1.IExportModelRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    exportModel(request: protos.google.cloud.automl.v1beta1.IExportModelRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    exportModel(request: protos.google.cloud.automl.v1beta1.IExportModelRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the exportModel() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkExportModelProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkExportModelProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    exportEvaluatedExamples(request: protos.google.cloud.automl.v1beta1.IExportEvaluatedExamplesRequest, options?: gax.CallOptions): Promise<[LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | undefined, {} | undefined]>;
    exportEvaluatedExamples(request: protos.google.cloud.automl.v1beta1.IExportEvaluatedExamplesRequest, options: gax.CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    exportEvaluatedExamples(request: protos.google.cloud.automl.v1beta1.IExportEvaluatedExamplesRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.automl.v1beta1.IOperationMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by the exportEvaluatedExamples() method.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *
     * @example:
     *   const decodedOperation = await checkExportEvaluatedExamplesProgress(name);
     *   console.log(decodedOperation.result);
     *   console.log(decodedOperation.done);
     *   console.log(decodedOperation.metadata);
     *
     */
    checkExportEvaluatedExamplesProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.automl.v1beta1.OperationMetadata>>;
    listDatasets(request: protos.google.cloud.automl.v1beta1.IListDatasetsRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IDataset[], protos.google.cloud.automl.v1beta1.IListDatasetsRequest | null, protos.google.cloud.automl.v1beta1.IListDatasetsResponse]>;
    listDatasets(request: protos.google.cloud.automl.v1beta1.IListDatasetsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListDatasetsRequest, protos.google.cloud.automl.v1beta1.IListDatasetsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IDataset>): void;
    listDatasets(request: protos.google.cloud.automl.v1beta1.IListDatasetsRequest, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListDatasetsRequest, protos.google.cloud.automl.v1beta1.IListDatasetsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IDataset>): void;
    /**
     * Equivalent to {@link listDatasets}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listDatasets} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the project from which to list datasets.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `dataset_metadata` - for existence of the case (e.g.
     *               image_classification_dataset_metadata:*). Some examples of using the filter are:
     *
     *     * `translation_dataset_metadata:*` --> The dataset has
     *                                            translation_dataset_metadata.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer results than requested.
     *   If unspecified, server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token|ListDatasetsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListDatasets|AutoMl.ListDatasets} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Dataset]{@link google.cloud.automl.v1beta1.Dataset} on 'data' event.
     */
    listDatasetsStream(request?: protos.google.cloud.automl.v1beta1.IListDatasetsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listDatasets}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the project from which to list datasets.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `dataset_metadata` - for existence of the case (e.g.
     *               image_classification_dataset_metadata:*). Some examples of using the filter are:
     *
     *     * `translation_dataset_metadata:*` --> The dataset has
     *                                            translation_dataset_metadata.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer results than requested.
     *   If unspecified, server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListDatasetsResponse.next_page_token|ListDatasetsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListDatasets|AutoMl.ListDatasets} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listDatasetsAsync(request?: protos.google.cloud.automl.v1beta1.IListDatasetsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.cloud.automl.v1beta1.IDataset>;
    listTableSpecs(request: protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.ITableSpec[], protos.google.cloud.automl.v1beta1.IListTableSpecsRequest | null, protos.google.cloud.automl.v1beta1.IListTableSpecsResponse]>;
    listTableSpecs(request: protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, protos.google.cloud.automl.v1beta1.IListTableSpecsResponse | null | undefined, protos.google.cloud.automl.v1beta1.ITableSpec>): void;
    listTableSpecs(request: protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, protos.google.cloud.automl.v1beta1.IListTableSpecsResponse | null | undefined, protos.google.cloud.automl.v1beta1.ITableSpec>): void;
    /**
     * Equivalent to {@link listTableSpecs}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listTableSpecs} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the dataset to list table specs from.
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   Mask specifying which fields to read.
     * @param {string} request.filter
     *   Filter expression, see go/filtering.
     * @param {number} request.pageSize
     *   Requested page size. The server can return fewer results than requested.
     *   If unspecified, the server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained from the
     *   {@link google.cloud.automl.v1beta1.ListTableSpecsResponse.next_page_token|ListTableSpecsResponse.next_page_token} field of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListTableSpecs|AutoMl.ListTableSpecs} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [TableSpec]{@link google.cloud.automl.v1beta1.TableSpec} on 'data' event.
     */
    listTableSpecsStream(request?: protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listTableSpecs}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the dataset to list table specs from.
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   Mask specifying which fields to read.
     * @param {string} request.filter
     *   Filter expression, see go/filtering.
     * @param {number} request.pageSize
     *   Requested page size. The server can return fewer results than requested.
     *   If unspecified, the server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained from the
     *   {@link google.cloud.automl.v1beta1.ListTableSpecsResponse.next_page_token|ListTableSpecsResponse.next_page_token} field of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListTableSpecs|AutoMl.ListTableSpecs} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listTableSpecsAsync(request?: protos.google.cloud.automl.v1beta1.IListTableSpecsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.cloud.automl.v1beta1.ITableSpec>;
    listColumnSpecs(request: protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IColumnSpec[], protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest | null, protos.google.cloud.automl.v1beta1.IListColumnSpecsResponse]>;
    listColumnSpecs(request: protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, protos.google.cloud.automl.v1beta1.IListColumnSpecsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IColumnSpec>): void;
    listColumnSpecs(request: protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, protos.google.cloud.automl.v1beta1.IListColumnSpecsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IColumnSpec>): void;
    /**
     * Equivalent to {@link listColumnSpecs}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listColumnSpecs} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the table spec to list column specs from.
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   Mask specifying which fields to read.
     * @param {string} request.filter
     *   Filter expression, see go/filtering.
     * @param {number} request.pageSize
     *   Requested page size. The server can return fewer results than requested.
     *   If unspecified, the server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained from the
     *   {@link google.cloud.automl.v1beta1.ListColumnSpecsResponse.next_page_token|ListColumnSpecsResponse.next_page_token} field of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs|AutoMl.ListColumnSpecs} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [ColumnSpec]{@link google.cloud.automl.v1beta1.ColumnSpec} on 'data' event.
     */
    listColumnSpecsStream(request?: protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listColumnSpecs}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The resource name of the table spec to list column specs from.
     * @param {google.protobuf.FieldMask} request.fieldMask
     *   Mask specifying which fields to read.
     * @param {string} request.filter
     *   Filter expression, see go/filtering.
     * @param {number} request.pageSize
     *   Requested page size. The server can return fewer results than requested.
     *   If unspecified, the server will pick a default size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained from the
     *   {@link google.cloud.automl.v1beta1.ListColumnSpecsResponse.next_page_token|ListColumnSpecsResponse.next_page_token} field of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs|AutoMl.ListColumnSpecs} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listColumnSpecsAsync(request?: protos.google.cloud.automl.v1beta1.IListColumnSpecsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.cloud.automl.v1beta1.IColumnSpec>;
    listModels(request: protos.google.cloud.automl.v1beta1.IListModelsRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IModel[], protos.google.cloud.automl.v1beta1.IListModelsRequest | null, protos.google.cloud.automl.v1beta1.IListModelsResponse]>;
    listModels(request: protos.google.cloud.automl.v1beta1.IListModelsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListModelsRequest, protos.google.cloud.automl.v1beta1.IListModelsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IModel>): void;
    listModels(request: protos.google.cloud.automl.v1beta1.IListModelsRequest, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListModelsRequest, protos.google.cloud.automl.v1beta1.IListModelsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IModel>): void;
    /**
     * Equivalent to {@link listModels}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listModels} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the project, from which to list the models.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `model_metadata` - for existence of the case (e.g.
     *               video_classification_model_metadata:*).
     *     * `dataset_id` - for = or !=. Some examples of using the filter are:
     *
     *     * `image_classification_model_metadata:*` --> The model has
     *                                          image_classification_model_metadata.
     *     * `dataset_id=5` --> The model was created from a dataset with ID 5.
     * @param {number} request.pageSize
     *   Requested page size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListModelsResponse.next_page_token|ListModelsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListModels|AutoMl.ListModels} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [Model]{@link google.cloud.automl.v1beta1.Model} on 'data' event.
     */
    listModelsStream(request?: protos.google.cloud.automl.v1beta1.IListModelsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listModels}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the project, from which to list the models.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `model_metadata` - for existence of the case (e.g.
     *               video_classification_model_metadata:*).
     *     * `dataset_id` - for = or !=. Some examples of using the filter are:
     *
     *     * `image_classification_model_metadata:*` --> The model has
     *                                          image_classification_model_metadata.
     *     * `dataset_id=5` --> The model was created from a dataset with ID 5.
     * @param {number} request.pageSize
     *   Requested page size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListModelsResponse.next_page_token|ListModelsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListModels|AutoMl.ListModels} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listModelsAsync(request?: protos.google.cloud.automl.v1beta1.IListModelsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.cloud.automl.v1beta1.IModel>;
    listModelEvaluations(request: protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, options?: gax.CallOptions): Promise<[protos.google.cloud.automl.v1beta1.IModelEvaluation[], protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest | null, protos.google.cloud.automl.v1beta1.IListModelEvaluationsResponse]>;
    listModelEvaluations(request: protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, options: gax.CallOptions, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, protos.google.cloud.automl.v1beta1.IListModelEvaluationsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IModelEvaluation>): void;
    listModelEvaluations(request: protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, callback: PaginationCallback<protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, protos.google.cloud.automl.v1beta1.IListModelEvaluationsResponse | null | undefined, protos.google.cloud.automl.v1beta1.IModelEvaluation>): void;
    /**
     * Equivalent to {@link listModelEvaluations}, but returns a NodeJS Stream object.
     *
     * This fetches the paged responses for {@link listModelEvaluations} continuously
     * and invokes the callback registered for 'data' event for each element in the
     * responses.
     *
     * The returned object has 'end' method when no more elements are required.
     *
     * autoPaginate option will be ignored.
     *
     * @see {@link https://nodejs.org/api/stream.html}
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the model to list the model evaluations for.
     *   If modelId is set as "-", this will list model evaluations from across all
     *   models of the parent location.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `annotation_spec_id` - for =, !=  or existence. See example below for
     *                            the last.
     *
     *   Some examples of using the filter are:
     *
     *     * `annotation_spec_id!=4` --> The model evaluation was done for
     *                               annotation spec with ID different than 4.
     *     * `NOT annotation_spec_id:*` --> The model evaluation was done for
     *                                  aggregate of all annotation specs.
     * @param {number} request.pageSize
     *   Requested page size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token|ListModelEvaluationsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations|AutoMl.ListModelEvaluations} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [ModelEvaluation]{@link google.cloud.automl.v1beta1.ModelEvaluation} on 'data' event.
     */
    listModelEvaluationsStream(request?: protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, options?: gax.CallOptions): Transform;
    /**
     * Equivalent to {@link listModelEvaluations}, but returns an iterable object.
     *
     * for-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Resource name of the model to list the model evaluations for.
     *   If modelId is set as "-", this will list model evaluations from across all
     *   models of the parent location.
     * @param {string} request.filter
     *   An expression for filtering the results of the request.
     *
     *     * `annotation_spec_id` - for =, !=  or existence. See example below for
     *                            the last.
     *
     *   Some examples of using the filter are:
     *
     *     * `annotation_spec_id!=4` --> The model evaluation was done for
     *                               annotation spec with ID different than 4.
     *     * `NOT annotation_spec_id:*` --> The model evaluation was done for
     *                                  aggregate of all annotation specs.
     * @param {number} request.pageSize
     *   Requested page size.
     * @param {string} request.pageToken
     *   A token identifying a page of results for the server to return.
     *   Typically obtained via
     *   {@link google.cloud.automl.v1beta1.ListModelEvaluationsResponse.next_page_token|ListModelEvaluationsResponse.next_page_token} of the previous
     *   {@link google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations|AutoMl.ListModelEvaluations} call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
     */
    listModelEvaluationsAsync(request?: protos.google.cloud.automl.v1beta1.IListModelEvaluationsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.cloud.automl.v1beta1.IModelEvaluation>;
    /**
     * Return a fully-qualified annotationSpec resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} dataset
     * @param {string} annotation_spec
     * @returns {string} Resource name string.
     */
    annotationSpecPath(project: string, location: string, dataset: string, annotationSpec: string): string;
    /**
     * Parse the project from AnnotationSpec resource.
     *
     * @param {string} annotationSpecName
     *   A fully-qualified path representing AnnotationSpec resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromAnnotationSpecName(annotationSpecName: string): string | number;
    /**
     * Parse the location from AnnotationSpec resource.
     *
     * @param {string} annotationSpecName
     *   A fully-qualified path representing AnnotationSpec resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromAnnotationSpecName(annotationSpecName: string): string | number;
    /**
     * Parse the dataset from AnnotationSpec resource.
     *
     * @param {string} annotationSpecName
     *   A fully-qualified path representing AnnotationSpec resource.
     * @returns {string} A string representing the dataset.
     */
    matchDatasetFromAnnotationSpecName(annotationSpecName: string): string | number;
    /**
     * Parse the annotation_spec from AnnotationSpec resource.
     *
     * @param {string} annotationSpecName
     *   A fully-qualified path representing AnnotationSpec resource.
     * @returns {string} A string representing the annotation_spec.
     */
    matchAnnotationSpecFromAnnotationSpecName(annotationSpecName: string): string | number;
    /**
     * Return a fully-qualified columnSpec resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} dataset
     * @param {string} table_spec
     * @param {string} column_spec
     * @returns {string} Resource name string.
     */
    columnSpecPath(project: string, location: string, dataset: string, tableSpec: string, columnSpec: string): string;
    /**
     * Parse the project from ColumnSpec resource.
     *
     * @param {string} columnSpecName
     *   A fully-qualified path representing ColumnSpec resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromColumnSpecName(columnSpecName: string): string | number;
    /**
     * Parse the location from ColumnSpec resource.
     *
     * @param {string} columnSpecName
     *   A fully-qualified path representing ColumnSpec resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromColumnSpecName(columnSpecName: string): string | number;
    /**
     * Parse the dataset from ColumnSpec resource.
     *
     * @param {string} columnSpecName
     *   A fully-qualified path representing ColumnSpec resource.
     * @returns {string} A string representing the dataset.
     */
    matchDatasetFromColumnSpecName(columnSpecName: string): string | number;
    /**
     * Parse the table_spec from ColumnSpec resource.
     *
     * @param {string} columnSpecName
     *   A fully-qualified path representing ColumnSpec resource.
     * @returns {string} A string representing the table_spec.
     */
    matchTableSpecFromColumnSpecName(columnSpecName: string): string | number;
    /**
     * Parse the column_spec from ColumnSpec resource.
     *
     * @param {string} columnSpecName
     *   A fully-qualified path representing ColumnSpec resource.
     * @returns {string} A string representing the column_spec.
     */
    matchColumnSpecFromColumnSpecName(columnSpecName: string): string | number;
    /**
     * Return a fully-qualified dataset resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} dataset
     * @returns {string} Resource name string.
     */
    datasetPath(project: string, location: string, dataset: string): string;
    /**
     * Parse the project from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromDatasetName(datasetName: string): string | number;
    /**
     * Parse the location from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromDatasetName(datasetName: string): string | number;
    /**
     * Parse the dataset from Dataset resource.
     *
     * @param {string} datasetName
     *   A fully-qualified path representing Dataset resource.
     * @returns {string} A string representing the dataset.
     */
    matchDatasetFromDatasetName(datasetName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified model resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} model
     * @returns {string} Resource name string.
     */
    modelPath(project: string, location: string, model: string): string;
    /**
     * Parse the project from Model resource.
     *
     * @param {string} modelName
     *   A fully-qualified path representing Model resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromModelName(modelName: string): string | number;
    /**
     * Parse the location from Model resource.
     *
     * @param {string} modelName
     *   A fully-qualified path representing Model resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromModelName(modelName: string): string | number;
    /**
     * Parse the model from Model resource.
     *
     * @param {string} modelName
     *   A fully-qualified path representing Model resource.
     * @returns {string} A string representing the model.
     */
    matchModelFromModelName(modelName: string): string | number;
    /**
     * Return a fully-qualified modelEvaluation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} model
     * @param {string} model_evaluation
     * @returns {string} Resource name string.
     */
    modelEvaluationPath(project: string, location: string, model: string, modelEvaluation: string): string;
    /**
     * Parse the project from ModelEvaluation resource.
     *
     * @param {string} modelEvaluationName
     *   A fully-qualified path representing ModelEvaluation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromModelEvaluationName(modelEvaluationName: string): string | number;
    /**
     * Parse the location from ModelEvaluation resource.
     *
     * @param {string} modelEvaluationName
     *   A fully-qualified path representing ModelEvaluation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromModelEvaluationName(modelEvaluationName: string): string | number;
    /**
     * Parse the model from ModelEvaluation resource.
     *
     * @param {string} modelEvaluationName
     *   A fully-qualified path representing ModelEvaluation resource.
     * @returns {string} A string representing the model.
     */
    matchModelFromModelEvaluationName(modelEvaluationName: string): string | number;
    /**
     * Parse the model_evaluation from ModelEvaluation resource.
     *
     * @param {string} modelEvaluationName
     *   A fully-qualified path representing ModelEvaluation resource.
     * @returns {string} A string representing the model_evaluation.
     */
    matchModelEvaluationFromModelEvaluationName(modelEvaluationName: string): string | number;
    /**
     * Return a fully-qualified tableSpec resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} dataset
     * @param {string} table_spec
     * @returns {string} Resource name string.
     */
    tableSpecPath(project: string, location: string, dataset: string, tableSpec: string): string;
    /**
     * Parse the project from TableSpec resource.
     *
     * @param {string} tableSpecName
     *   A fully-qualified path representing TableSpec resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTableSpecName(tableSpecName: string): string | number;
    /**
     * Parse the location from TableSpec resource.
     *
     * @param {string} tableSpecName
     *   A fully-qualified path representing TableSpec resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTableSpecName(tableSpecName: string): string | number;
    /**
     * Parse the dataset from TableSpec resource.
     *
     * @param {string} tableSpecName
     *   A fully-qualified path representing TableSpec resource.
     * @returns {string} A string representing the dataset.
     */
    matchDatasetFromTableSpecName(tableSpecName: string): string | number;
    /**
     * Parse the table_spec from TableSpec resource.
     *
     * @param {string} tableSpecName
     *   A fully-qualified path representing TableSpec resource.
     * @returns {string} A string representing the table_spec.
     */
    matchTableSpecFromTableSpecName(tableSpecName: string): string | number;
    /**
     * Terminate the GRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     */
    close(): Promise<void>;
}
